<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="16" passed="13" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-17T09:25:19 IST" name="Loan Department" finished-at="2024-02-17T09:25:20 IST" duration-ms="457">
    <groups>
      <group name="Smoke">
        <method signature="XMLFile.PersonalLoan()[pri:0, instance:Test.XMLFile@16610890]" name="PersonalLoan" class="Test.XMLFile"/>
        <method signature="day3.MobileloginCarLogin()[pri:0, instance:Test.day3@67f639d3]" name="MobileloginCarLogin" class="Test.day3"/>
        <method signature="day4.MobileloginHomeLogin()[pri:0, instance:Test.day4@55634720]" name="MobileloginHomeLogin" class="Test.day4"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-02-17T09:25:19 IST" name="Car Loan" finished-at="2024-02-17T09:25:19 IST" duration-ms="248">
      <class name="Test.day3">
        <test-method is-config="true" signature="beforeclas()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="beforeclas" finished-at="2024-02-17T09:25:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclas -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="beforeevery" finished-at="2024-02-17T09:25:19 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="APILoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="APILoginCarLoan" data-provider="getData" finished-at="2024-02-17T09:25:19 IST" duration-ms="22" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginCarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="afterevery" finished-at="2024-02-17T09:25:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="beforeevery" finished-at="2024-02-17T09:25:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="APILoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="APILoginCarLoan" data-provider="getData" finished-at="2024-02-17T09:25:19 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginCarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="afterevery" finished-at="2024-02-17T09:25:19 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="beforeevery" finished-at="2024-02-17T09:25:19 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="APILoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="APILoginCarLoan" data-provider="getData" finished-at="2024-02-17T09:25:19 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginCarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="afterevery" finished-at="2024-02-17T09:25:19 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="beforeevery" finished-at="2024-02-17T09:25:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileSigninCarLogin()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="MobileSigninCarLogin" finished-at="2024-02-17T09:25:19 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSigninCarLogin -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="afterevery" finished-at="2024-02-17T09:25:19 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="beforeevery" finished-at="2024-02-17T09:25:19 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileSignoutCarLogin()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="MobileSignoutCarLogin" finished-at="2024-02-17T09:25:19 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignoutCarLogin -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="afterevery" finished-at="2024-02-17T09:25:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="beforeevery" finished-at="2024-02-17T09:25:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileloginCarLogin()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="MobileloginCarLogin" finished-at="2024-02-17T09:25:19 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginCarLogin -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="afterevery" finished-at="2024-02-17T09:25:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method signature="WebloginCarLoan(java.lang.String)[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="WebloginCarLoan" finished-at="2024-02-17T09:25:19 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginCarLoan -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="beforeevery" finished-at="2024-02-17T09:25:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="afterevery" finished-at="2024-02-17T09:25:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="afteclass()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="afteclass" finished-at="2024-02-17T09:25:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afteclass -->
      </class> <!-- Test.day3 -->
    </test> <!-- Car Loan -->
    <test started-at="2024-02-17T09:25:19 IST" name="Personal Loan" finished-at="2024-02-17T09:25:19 IST" duration-ms="139">
      <class name="Test.RunningTestcasesInTestNG">
        <test-method signature="Demo(java.lang.String,java.lang.String)[pri:0, instance:Test.RunningTestcasesInTestNG@16a0ee18]" started-at="2024-02-17T09:25:19 IST" name="Demo" finished-at="2024-02-17T09:25:19 IST" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method signature="SecondTest()[pri:0, instance:Test.RunningTestcasesInTestNG@16a0ee18]" started-at="2024-02-17T09:25:19 IST" name="SecondTest" finished-at="2024-02-17T09:25:19 IST" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Test.RunningTestcasesInTestNG.SecondTest(RunningTestcasesInTestNG.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondTest -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:Test.RunningTestcasesInTestNG@16a0ee18]" started-at="2024-02-17T09:25:19 IST" name="lastexecution" finished-at="2024-02-17T09:25:19 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- Test.RunningTestcasesInTestNG -->
      <class name="Test.XMLFile">
        <test-method is-config="true" signature="prerequiste()[pri:0, instance:Test.XMLFile@16610890]" started-at="2024-02-17T09:25:19 IST" name="prerequiste" finished-at="2024-02-17T09:25:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
        <test-method signature="PersonalLoan()[pri:0, instance:Test.XMLFile@16610890]" started-at="2024-02-17T09:25:19 IST" name="PersonalLoan" finished-at="2024-02-17T09:25:19 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PersonalLoan -->
      </class> <!-- Test.XMLFile -->
    </test> <!-- Personal Loan -->
    <test started-at="2024-02-17T09:25:20 IST" name="Home Loan" finished-at="2024-02-17T09:25:20 IST" duration-ms="45">
      <class name="Test.day3">
        <test-method is-config="true" signature="BFsuite()[pri:0, instance:Test.day3@67f639d3]" started-at="2024-02-17T09:25:19 IST" name="BFsuite" finished-at="2024-02-17T09:25:19 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BFsuite -->
      </class> <!-- Test.day3 -->
      <class name="Test.RunningTestcasesInTestNG">
        <test-method is-config="true" signature="afsuite()[pri:0, instance:Test.RunningTestcasesInTestNG@16a0ee18]" started-at="2024-02-17T09:25:20 IST" name="afsuite" finished-at="2024-02-17T09:25:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afsuite -->
      </class> <!-- Test.RunningTestcasesInTestNG -->
      <class name="Test.day4">
        <test-method signature="MobileloginHomeLogin()[pri:0, instance:Test.day4@55634720]" started-at="2024-02-17T09:25:20 IST" name="MobileloginHomeLogin" finished-at="2024-02-17T09:25:20 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginHomeLogin -->
        <test-method signature="Timeout()[pri:0, instance:Test.day4@55634720]" started-at="2024-02-17T09:25:20 IST" name="Timeout" finished-at="2024-02-17T09:25:20 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Timeout -->
        <test-method signature="WebloginHomeLoan()[pri:0, instance:Test.day4@55634720]" started-at="2024-02-17T09:25:20 IST" name="WebloginHomeLoan" finished-at="2024-02-17T09:25:20 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginHomeLoan -->
        <test-method signature="APILoginHomeLoan()[pri:0, instance:Test.day4@55634720]" started-at="2024-02-17T09:25:20 IST" name="APILoginHomeLoan" finished-at="2024-02-17T09:25:20 IST" depends-on-methods="Test.day4.WebloginHomeLoan" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginHomeLoan -->
      </class> <!-- Test.day4 -->
    </test> <!-- Home Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
