import static org.testng.Assert.assertEquals;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.time.Duration;
import java.util.ArrayList;
import java.util.Iterator;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.util.NumberToTextConverter;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import graphql.Assert;

public class UploadDownload {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		String fruitName="Apple";
        String fileName="C:\\Users\\samee\\Downloads\\download.xlsx";
        String updatedValue="350";
		
		WebDriver driver=new ChromeDriver();
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(7));
		driver.get("https://rahulshettyacademy.com/upload-download-test/index.html");
	   //Download
		driver.findElement(By.cssSelector(".button")).click();
		
		//Edit Excel-getCoulmnNumber of price--getRowNumber of Apple--update excel with row
		int col=getColumnNumber(fileName,"price");
		int row=getRowNumber(fileName,"Apple");
		Assert.assertTrue(updateCell(fileName,row,col,updatedValue));
		
		
		//Upload
		WebElement upload=driver.findElement(By.cssSelector("input[type='file']"));
		upload.sendKeys("C:\\Users\\samee\\Downloads\\download.xlsx");  //send the path where file is sitting in machine
		//wait for success message to show up and wait for disappear
		By toastLocator=By.cssSelector(".Toastify__toast-body div:nth-child(2)");
		WebDriverWait wait=new WebDriverWait(driver,Duration.ofSeconds(10));
		wait.until(ExpectedConditions.visibilityOfElementLocated(toastLocator));
		String toastText=driver.findElement(toastLocator).getText();
		System.out.println(toastText);
		assertEquals("Updated Excel Data Successfully.",toastText);
		wait.until(ExpectedConditions.invisibilityOfElementLocated(toastLocator));
	
		//Verify updated excel data showing in the web table
		String priceColumn=driver.findElement(By.xpath("//div[text()='Price']")).getAttribute("data-column-id");
		System.out.println(priceColumn);
		String actualPrice=driver.findElement(By.xpath("//div[text()='"+fruitName+"']/parent::div/parent::div/div[@id='cell-"+priceColumn+"-undefined']")).getText();
		System.out.println(actualPrice);
		assertEquals(updatedValue,actualPrice);
		
		
		
	
	
	
	
	}

	private static int getColumnNumber(String fileName,String colName) throws IOException {
		// TODO Auto-generated method stub
		ArrayList<String> a= new ArrayList<String>();
		FileInputStream fis=new FileInputStream(fileName);
		XSSFWorkbook workbook=new XSSFWorkbook(fis);
		XSSFSheet sheet=workbook.getSheet("Sheet1");
			Iterator<Row> rows=sheet.iterator(); 
			Row firstrow=rows.next();  
			Iterator<Cell> ce=firstrow.cellIterator();  
			int k=1;
			int column = 0;
			while(ce.hasNext())  
			{
				Cell value=ce.next();
				if(value.getStringCellValue().equalsIgnoreCase(colName))     
						{
							column=k;    
						}
				k++;
			}
			System.out.println(column);   //print the column number index
			return column;
			
			
		
	}

	private static int getRowNumber(String fileName,String fruitName) throws IOException {
		// TODO Auto-generated method stub
		ArrayList<String> a= new ArrayList<String>();
		FileInputStream fis=new FileInputStream(fileName);
		XSSFWorkbook workbook=new XSSFWorkbook(fis);
		XSSFSheet sheet=workbook.getSheet("Sheet1");
			Iterator<Row> rows=sheet.iterator();
			int k=1;
			int rowIndex=-1;
			//Here we have to write two while loop because we have to iterate rows and cells in the rows
	//Outer loops over rows and inner loop over cells
			while(rows.hasNext())
			{
				Row row=rows.next();  //here we are pulling first row details
			    //If we want all cells of row we can call celliterators
				Iterator<Cell> cells=row.cellIterator();
				//now lets start inner while loop
				while(cells.hasNext())
				{
					Cell cell=cells.next();
					if(cell.getStringCellValue().equalsIgnoreCase(fruitName))
					{
						rowIndex=k;
						
					}
					
				}
				k++;
			
			}
			return rowIndex;
			
	
	}

	private static boolean updateCell(String fileName,int row,int col,String updatedValue) throws IOException {
		// TODO Auto-generated method stub
		ArrayList<String> a= new ArrayList<String>();
		FileInputStream fis=new FileInputStream(fileName);
		XSSFWorkbook workbook=new XSSFWorkbook(fis);
		XSSFSheet sheet=workbook.getSheet("Sheet1");
		Row rowField=sheet.getRow(row-1);
		Cell cellfield=rowField.getCell(col-1);
		cellfield.setCellValue(updatedValue);   //setCellValue method for updated value;
	    //save the excel
		FileOutputStream fos=new FileOutputStream(fileName);
		workbook.write(fos);
		workbook.close();
		fis.close();
		return true;
	}
	

}
